{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\currency\\\\currency_converter\\\\src\\\\components\\\\Converter.js\";\nimport React from 'react';\nimport './Converter.css';\n\nclass Converter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.convert = () => {\n      const queryCurrencyData = `${this.state.currencyB},${this.state.currencyA}`;\n      const url = `https://api.exchangeratesapi.io/latest?symbols=${queryCurrencyData}`;\n      fetch(url).then(res => {\n        return res.json();\n      }).then(json => {\n        const conversion = json[\"rates\"][this.state.currencyB];\n        this.setState({\n          currencyConversion: (parseFloat(this.state.currencyToConvert) * conversion).toFixed(2)\n        });\n      });\n    };\n\n    this.setCurrencyA = event => {\n      this.setState({\n        currencyA: event.target.value\n      });\n    };\n\n    this.setCurrencyB = event => {\n      this.setState({\n        currencyB: event.target.value\n      });\n    };\n\n    this.state = new Object();\n    this.state.currencyToConvert = \"\";\n    this.state.currencyConversion = 0;\n    this.state.currencyA = \"AUD\";\n    this.state.currencyB = \"AUD\";\n    this.state.allCurrencies = [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"GBP\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"USD\", \"ZAR\"];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"converter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Convert \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: event => this.setState({\n        currencyA: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, this.state.allCurrencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      value: cur,\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 65\n      }\n    }, cur)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Into \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: event => this.setState({\n        currencyB: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, this.state.allCurrencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      value: cur,\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 65\n      }\n    }, cur)))), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, this.state.currencyA, \" to \", this.state.currencyB), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.setState({\n        currencyToConvert: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: this.convert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Convert\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Converted Value: \", this.state.currencyConversion));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/user/Documents/currency/currency_converter/src/components/Converter.js"],"names":["React","Converter","Component","constructor","props","convert","queryCurrencyData","state","currencyB","currencyA","url","fetch","then","res","json","conversion","setState","currencyConversion","parseFloat","currencyToConvert","toFixed","setCurrencyA","event","target","value","setCurrencyB","Object","allCurrencies","render","map","cur"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Converter.css';\r\n\r\nclass Converter extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = new Object;\r\n        this.state.currencyToConvert = \"\";\r\n        this.state.currencyConversion = 0;\r\n        this.state.currencyA = \"AUD\";\r\n        this.state.currencyB = \"AUD\";\r\n        this.state.allCurrencies = [\"AUD\",\"BGN\",\"BRL\",\r\n        \"CAD\",\"CHF\",\"CNY\",\"CZK\",\"DKK\",\"GBP\",\"HKD\",\"HRK\",\r\n        \"HUF\",\"IDR\",\"ILS\",\"INR\",\"ISK\",\"JPY\",\"KRW\",\"MXN\",\r\n        \"MYR\",\"NOK\",\"NZD\",\"PHP\",\"PLN\",\"RON\",\"RUB\",\"SEK\",\r\n        \"SGD\",\"THB\",\"TRY\",\"USD\",\"ZAR\",];\r\n    }\r\n\r\n    convert = () =>{\r\n\r\n        const queryCurrencyData = `${this.state.currencyB},${this.state.currencyA}`; \r\n        const url = `https://api.exchangeratesapi.io/latest?symbols=${queryCurrencyData}`;\r\n\r\n        fetch(url).then(res=>{\r\n            return res.json();\r\n        }).then(json => {\r\n            const conversion = json[\"rates\"][this.state.currencyB];\r\n            this.setState({\r\n                currencyConversion : (parseFloat(this.state.currencyToConvert) * conversion).toFixed(2)\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n\r\n    setCurrencyA = (event) =>{\r\n        this.setState({currencyA : event.target.value})\r\n    }\r\n\r\n    setCurrencyB = (event) =>{\r\n        this.setState({currencyB : event.target.value})\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"converter\">\r\n                <div className=\"div-selector\">\r\n                    <p>Convert </p>\r\n                    <select onChange={(event) => this.setState({currencyA : event.target.value})}>\r\n                        {\r\n                            this.state.allCurrencies.map(cur => <option value={cur} key={cur}>{cur}</option>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"space\">-</div>\r\n\r\n                <div className=\"div-selector\">\r\n                    <p>Into </p>\r\n                    <select onChange={(event) => this.setState({currencyB : event.target.value})}>\r\n                        {\r\n                            this.state.allCurrencies.map(cur => <option value={cur} key={cur}>{cur}</option>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <h2 className=\"title\">{this.state.currencyA} to {this.state.currencyB}</h2>\r\n\r\n                <input type=\"text\" \r\n                onChange={(event) => this.setState({currencyToConvert : event.target.value})}/>\r\n                <a onClick={this.convert}>Convert</a>\r\n                <h2>Converted Value: {this.state.currencyConversion}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Converter;"]},"metadata":{},"sourceType":"module"}